openapi: 3.0.1
info:
  title: msa-bootcamp
  version: 1.0.0
servers:
- description: Local server
  url: http://localhost:8080
security:
- jhipster-uaa: []
paths:
  /api/singers:
    post:
      description: create an singer
      operationId: createSinger
      requestBody:
        content:
          application/vnd.vroong.private.v1+json:
            schema:
              $ref: '#/components/schemas/CreateSingerRequest'
        description: singer model
      responses:
        "201":
          description: Created
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      tags:
      - Singer
      x-content-type: application/vnd.vroong.private.v1+json
      x-accepts: application/problem+json
  /api/singers/albums:
    post:
      description: create an album
      operationId: createAlbum
      requestBody:
        content:
          application/vnd.vroong.private.v1+json:
            schema:
              $ref: '#/components/schemas/Album'
        description: album model
      responses:
        "201":
          description: Created
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      tags:
      - Albumn
      x-content-type: application/vnd.vroong.private.v1+json
      x-accepts: application/problem+json
  /api/songs:
    get:
      description: get song list
      operationId: getSongs
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      responses:
        "200":
          description: Ok
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      tags:
      - Song
      x-accepts: application/problem+json
    post:
      description: create song
      operationId: createSong
      requestBody:
        content:
          application/vnd.vroong.private.v1+json:
            schema:
              $ref: '#/components/schemas/Song'
        description: song model
      responses:
        "201":
          description: Created
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      tags:
      - Song
      x-content-type: application/vnd.vroong.private.v1+json
      x-accepts: application/problem+json
  /api/songs/{songId}:
    delete:
      description: delete song
      operationId: deleteSong
      parameters:
      - description: song id
        explode: false
        in: path
        name: songId
        required: true
        schema:
          $ref: '#/components/schemas/LongId'
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      tags:
      - Song
      x-accepts: application/problem+json
    get:
      description: get song
      operationId: getSong
      parameters:
      - description: song id
        explode: false
        in: path
        name: songId
        required: true
        schema:
          $ref: '#/components/schemas/LongId'
        style: simple
      responses:
        "200":
          description: Ok
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      tags:
      - Song
      x-accepts: application/problem+json
    put:
      description: update song
      operationId: updateSong
      parameters:
      - description: song id
        explode: false
        in: path
        name: songId
        required: true
        schema:
          $ref: '#/components/schemas/LongId'
        style: simple
      requestBody:
        content:
          application/vnd.vroong.private.v1+json:
            schema:
              $ref: '#/components/schemas/Song'
        description: song model
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      tags:
      - Song
      x-content-type: application/vnd.vroong.private.v1+json
      x-accepts: application/problem+json
components:
  parameters:
    SingerIdParam:
      description: singer id
      explode: false
      in: path
      name: singerId
      required: true
      schema:
        $ref: '#/components/schemas/LongId'
      style: simple
    AlbumIdParam:
      description: album id
      explode: false
      in: path
      name: albumId
      required: true
      schema:
        $ref: '#/components/schemas/LongId'
      style: simple
    SongIdParam:
      description: song id
      explode: false
      in: path
      name: songId
      required: true
      schema:
        $ref: '#/components/schemas/LongId'
      style: simple
    PageParam:
      explode: true
      in: query
      name: page
      required: false
      schema:
        default: 1
        format: int32
        type: integer
      style: form
    SizeParam:
      explode: true
      in: query
      name: size
      required: false
      schema:
        default: 10
        format: int32
        type: integer
      style: form
  responses:
    Ok:
      description: Ok
    Created:
      description: Created
    Accepted:
      description: Accepted
    NoContent:
      description: No Content
    EmptyContent:
      content:
        application/vnd.vroong.private.v1+json: {}
      description: No Content
    BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Bad Request
    Unauthorized:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Unauthorized
    Forbidden:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Forbidden
    NotFound:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Not Found
    Conflict:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Conflict
    ServerError:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Internal Server Error
  schemas:
    LongId:
      example: 1
      format: int64
      type: integer
    String:
      example: foo
      type: string
    UUID:
      example: c9106593-2d6c-40eb-8504-66b0ef41ad2d
      format: uuid
      type: string
    DateTime:
      format: date-time
      type: string
    Duration:
      example: PT1D
      format: duration
      type: string
    CommonProperties:
      properties:
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'
        createdBy:
          $ref: '#/components/schemas/UUID'
        updatedBy:
          $ref: '#/components/schemas/UUID'
      type: object
    ProblemDetails:
      properties:
        type:
          example: msabootcamp/constraint-violation
          format: uri
          type: string
        title:
          example: 제출한 요청이 유효하지 않습니다
          type: string
        detail:
          type: string
        fieldErrors:
          items:
            $ref: '#/components/schemas/FieldError'
          nullable: true
          type: array
      type: object
    FieldError:
      properties:
        field:
          type: string
        message:
          example: "[\"NotNull\",\"Size\"]"
          type: string
      type: object
    ErrorCode:
      example: "[\"NotNull\",\"Size\"]"
      type: string
    Page:
      properties:
        size:
          default: 20
          example: 20
          format: int32
          type: integer
        totalElements:
          example: 100
          format: int64
          type: integer
        totalPages:
          example: 5
          format: int32
          type: integer
        number:
          default: 1
          example: 1
          format: int32
          type: integer
      type: object
    CreateSingerRequest:
      properties:
        name:
          type: string
        singerId:
          example: 1
          format: int64
          type: integer
      required:
      - name
      - singerId
      type: object
    Singer:
      allOf:
      - $ref: '#/components/schemas/CommonProperties'
      - $ref: '#/components/schemas/Singer_allOf'
    CreateAlbumRequest:
      properties:
        singerId:
          example: 1
          format: int64
          type: integer
        title:
          type: string
        publishedAt:
          $ref: '#/components/schemas/DateTime'
      required:
      - publishedAt
      - singerId
      - title
      type: object
    Album:
      allOf:
      - $ref: '#/components/schemas/CommonProperties'
      - $ref: '#/components/schemas/Singer'
      - $ref: '#/components/schemas/Album_allOf'
    createSongRequest:
      properties:
        title:
          type: string
        playTime:
          example: PT1D
          format: duration
          type: string
      required:
      - playTime
      - title
      type: object
    Song:
      allOf:
      - $ref: '#/components/schemas/CommonProperties'
      - $ref: '#/components/schemas/Song_allOf'
    SongList:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Song'
          type: array
        page:
          $ref: '#/components/schemas/Page'
      type: object
    Singer_allOf:
      properties:
        singerId:
          example: 1
          format: int64
          type: integer
        name:
          type: string
      type: object
    Album_allOf:
      properties:
        songs:
          items:
            $ref: '#/components/schemas/Song'
          type: array
        albumId:
          example: 1
          format: int64
          type: integer
        title:
          type: string
        publishedAt:
          $ref: '#/components/schemas/DateTime'
      type: object
    Song_allOf:
      properties:
        songId:
          example: 1
          format: int64
          type: integer
        title:
          type: string
        playTime:
          example: PT1D
          format: duration
          type: string
      type: object
  securitySchemes:
    jhipster-uaa:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: http://localhost:9999/uaa/oauth/token
        password:
          refreshUrl: http://localhost:9999/uaa/oauth/token
          scopes: {}
          tokenUrl: http://localhost:9999/uaa/oauth/token
      type: oauth2

